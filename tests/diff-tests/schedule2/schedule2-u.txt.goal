<std.block()int:::ENTER>
  <::next_pid >= 0 {0-}, ::next_pid >= 0 {1+}> (UInt,SUJ)
  <::next_pid <= 40 {0.0171-}, ::next_pid <= 45 {0-}> (U!Int,DUU)
<std.block()int:::EXIT>
  <::next_pid >= 0 {0-}, ::next_pid >= 0 {1+}> (UInt,SUJ)
  <::next_pid <= 40 {0.0171-}, ::next_pid <= 45 {0-}> (U!Int,DUU)
<std.enqueue(int;process *;)int:::ENTER>
  <prio >= 0 {1+}, prio >= -1 {1+}> (UInt,DJJ)
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.001-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.enqueue(int;process *;)int:::EXIT>
  <null, (return == 0)  ==>  (return is a pointer) {1+}> (NInt,MJ)
  <null, (return == -4)  ==>  (prio >= -1) {1+}> (N!Int,MJ)
  <null, (return == 0)  ==>  (prio >= 0) {1+}> (NInt,MJ)
  <null, (return == -4)  ==>  (prio != 0) {0.9999+}> (NInt,MJ)
  <prio >= 0 {1+}, prio >= -1 {1+}> (UInt,DJJ)
  <return == 0 {1+}, return one of { -4, 0 } {1+}> (UInt,DJJ)
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.001-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.finish()int:::ENTER>
  <::next_pid <= 40 {0.0204-}, ::next_pid <= 45 {0.006-}> (U!Int,DUU)
<std.finish()int:::EXIT>
  <return one of { 0, 1 } {1+}, return one of { 0, 1 } {1+}> (U!Int,SJJ)
  <::next_pid <= 40 {0.0204-}, ::next_pid <= 45 {0.006-}> (U!Int,DUU)
<std.flush()int:::ENTER>
  <::next_pid <= 40 {0-}, ::next_pid <= 45 {0-}> (U!Int,DUU)
<std.flush()int:::EXIT>
  <::next_pid <= 40 {0-}, ::next_pid <= 45 {0-}> (U!Int,DUU)
<std.get_command(int *;int *;float *;)int:::ENTER>
  <*command >= -1 {1+}, *command >= -1 {1+}> (U!Int,SJJ)
  <*prio >= -1 {1+}, *prio >= -2 {0-}> (U!Int,DJU)
  <*ratio >= -1.99958 {1-}, *ratio >= -1.99958 {0.8858-}> (U!Int,SJU)
  <*command != 0 {1+}, null> (UInt,JM)
  <*command <= 134662172 {1-}, *command <= 134662172 {1-}> (U!Int,SJJ)
  <*prio <= 3 {1-}, *prio <= 9 {0.0521-}> (U!Int,DJU)
  <::next_pid <= 42 {0.006-}, ::next_pid <= 45 {0.018-}> (U!Int,DUU)
<std.get_command(int *;int *;float *;)int:::EXIT>
  <null, (return == 0)  ==>  (*prio >= -1) {1+}> (N!Int,MJ)
  <null, (return == 0)  ==>  (orig(*prio) >= -1) {1+}> (N!Int,MJ)
  <(return == 1)  ==>  (*ratio >= -1.0) {1+}, (return == 1)  ==>  (*ratio >= -1.0) {1+}> (N!Int,SJJ)
  <(return == 1)  ==>  (*prio != 0) {1+}, null> (NInt,JM)
  <null, (orig(*command) == 0) ==> (*command == 0) {1+}> (Bin,MJ)
  <(*prio == 0) ==> (orig(*prio) == 0) {1+}, null> (Bin,JM)
  <*command >= -1 {1+}, *command >= -1 {1+}> (U!Int,SJJ)
  <*prio >= -1 {1+}, *prio >= -2 {0-}> (U!Int,DJU)
  <orig(*command) >= -1 {1-}, orig(*command) >= -1 {1-}> (U!Int,SJJ)
  <orig(*prio) >= -1 {1-}, orig(*prio) >= -2 {0-}> (U!Int,DJU)
  <*ratio >= -1.99958 {0.01-}, *ratio >= -1.99958 {0.004-}> (U!Int,SUU)
  <orig(*ratio) >= -1.99958 {1-}, orig(*ratio) >= -1.99958 {0.8858-}> (U!Int,SJU)
  <*command != 0 {1+}, null> (UInt,JM)
  <return one of { 0, 1 } {1+}, return one of { 0, 1 } {1+}> (U!Int,SJJ)
  <*command <= 134662172 {1-}, *command <= 134662172 {1-}> (U!Int,SJJ)
  <*prio <= 3 {1-}, *prio <= 9 {0.0521-}> (U!Int,DJU)
  <::next_pid <= 42 {0.006-}, ::next_pid <= 45 {0.018-}> (U!Int,DUU)
  <orig(*command) <= 134662172 {1-}, orig(*command) <= 134662172 {1-}> (U!Int,SJJ)
  <orig(*prio) <= 3 {1-}, orig(*prio) <= 9 {0.0521-}> (U!Int,DJU)
<std.get_current()process *:::ENTER>
  <::next_pid >= 0 {0.4444-}, ::next_pid >= 0 {1+}> (UInt,SUJ)
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.02-}> (U!Int,DUU)
<std.get_current()process *:::EXIT>
  <::next_pid >= 0 {0.4444-}, ::next_pid >= 0 {1+}> (UInt,SUJ)
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.02-}> (U!Int,DUU)
<std.get_process(int;float;process **;)int:::ENTER>
  <ratio >= 0.0 {1+}, ratio >= -1.0 {0.0721-}> (UInt,DJU)
  <::next_pid <= 41 {0.0408-}, ::next_pid <= 45 {0.0401-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 3 {1-}> (U!Int,SJJ)
<std.get_process(int;float;process **;)int:::EXIT>
  <ratio >= 0.0 {1+}, ratio >= -1.0 {0.0721-}> (UInt,DJU)
  <return one of { 0, 1 } {1+}, return one of { -5, 0, 1 } {1+}> (U!Int,DJJ)
  <::next_pid <= 41 {0.0408-}, ::next_pid <= 45 {0.0401-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 3 {1-}> (U!Int,SJJ)
<std.new_job(int;)int:::ENTER>
  <prio one of { 1, 2, 3 } {1+}, null> (U!Int,JM)
  <::next_pid <= 41 {0-}, ::next_pid <= 44 {0-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.new_job(int;)int:::EXIT>
  <null, ::next_pid >= orig(::next_pid) {1+}> (Bin,MJ)
  <::next_pid - orig(::next_pid) - 1 == 0 {1+}, null> (Bin,JM)
  <null, (::next_pid == 0) ==> (orig(::next_pid) == 0) {1+}> (Bin,MJ)
  <::next_pid >= 1 {1+}, ::next_pid >= 0 {0.3333-}> (UInt,DJU)
  <return == 0  (mod 0) {0-}, return == 0  (mod 4) {1+}> (UInt,DUJ)
  <prio one of { 1, 2, 3 } {1+}, null> (U!Int,JM)
  <return == 0 {1+}, return one of { -4, 0 } {1+}> (UInt,DJJ)
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0-}> (U!Int,DUU)
  <orig(::next_pid) <= 41 {0-}, orig(::next_pid) <= 44 {0-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.put_end(int;process *;)int:::ENTER>
  <prio >= 0 {1+}, prio >= -1 {1+}> (UInt,DJJ)
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.001-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.put_end(int;process *;)int:::EXIT>
  <null, (return == 0)  ==>  (return is a pointer) {1+}> (NInt,MJ)
  <null, (return == -4)  ==>  (prio >= -1) {1+}> (N!Int,MJ)
  <null, (return == 0)  ==>  (prio >= 0) {1+}> (NInt,MJ)
  <null, (return == -4)  ==>  (prio != 0) {0.9999+}> (NInt,MJ)
  <prio >= 0 {1+}, prio >= -1 {1+}> (UInt,DJJ)
  <return == 0 {1+}, return one of { -4, 0 } {1+}> (UInt,DJJ)
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.001-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.quantum_expire()int:::ENTER>
  <::next_pid <= 40 {0.0022-}, ::next_pid <= 45 {0.0022-}> (U!Int,DUU)
<std.quantum_expire()int:::EXIT>
  <::next_pid <= 40 {0.0022-}, ::next_pid <= 45 {0.0022-}> (U!Int,DUU)
<std.reschedule(int;)int:::ENTER>
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.006-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 3 {1-}> (U!Int,SJJ)
<std.reschedule(int;)int:::EXIT>
  <::next_pid <= 42 {0-}, ::next_pid <= 45 {0.006-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 3 {1-}> (U!Int,SJJ)
<std.schedule(int;int;float;)int:::ENTER>
  <command >= -1 {1+}, command >= -1 {1+}> (U!Int,SJJ)
  <prio >= -1 {1+}, prio >= -2 {0-}> (U!Int,DJU)
  <ratio >= -1.0 {1+}, ratio >= -1.0 {1+}> (U!Int,SJJ)
  <command != 0 {1+}, null> (UInt,JM)
  <prio != 0 {1+}, null> (UInt,JM)
  <::next_pid <= 42 {0.004-}, ::next_pid <= 45 {0.016-}> (U!Int,DUU)
  <command <= 7 {1-}, command <= 34 {0-}> (U!Int,DJU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.schedule(int;int;float;)int:::EXIT>
  <command >= -1 {1+}, command >= -1 {1+}> (U!Int,SJJ)
  <prio >= -1 {1+}, prio >= -2 {0-}> (U!Int,DJU)
  <return >= -6 {1-}, return >= -6 {1-}> (U!Int,SJJ)
  <ratio >= -1.0 {1+}, ratio >= -1.0 {1+}> (U!Int,SJJ)
  <return == 0  (mod 2) {1+}, null> (UInt,JM)
  <command != 0 {1+}, null> (UInt,JM)
  <prio != 0 {1+}, null> (UInt,JM)
  <return one of { -6, -4, 0 } {1+}, null> (U!Int,JM)
  <::next_pid <= 42 {0.006-}, ::next_pid <= 45 {0.018-}> (U!Int,DUU)
  <command <= 7 {1-}, command <= 34 {0-}> (U!Int,DJU)
  <orig(::next_pid) <= 42 {0.004-}, orig(::next_pid) <= 45 {0.016-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 9 {0.0521-}> (U!Int,DJU)
<std.unblock(float;)int:::ENTER>
  <ratio != 0 {0-}, ratio != 0 {1+}> (UInt,SUJ)
  <::next_pid <= 40 {0.0084-}, ::next_pid <= 45 {0-}> (U!Int,DUU)
<std.unblock(float;)int:::EXIT>
  <ratio != 0 {0-}, ratio != 0 {1+}> (UInt,SUJ)
  <return == 0 {1+}, return one of { -5, 0 } {1+}> (UInt,DJJ)
  <::next_pid <= 40 {0.0084-}, ::next_pid <= 45 {0-}> (U!Int,DUU)
<std.upgrade_prio(int;float;)int:::ENTER>
  <::next_pid >= 0 {1+}, ::next_pid >= 0 {0.7779-}> (UInt,SJU)
  <ratio != 0 {0-}, ratio != 0 {1+}> (UInt,SUJ)
  <prio one of { 1, 2, 3 } {1+}, null> (U!Int,JM)
  <::next_pid <= 42 {0.0023-}, ::next_pid <= 45 {0.0083-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 8 {0.008-}> (U!Int,DJU)
<std.upgrade_prio(int;float;)int:::EXIT>
  <::next_pid >= 0 {1+}, ::next_pid >= 0 {0.7779-}> (UInt,SJU)
  <return >= -4 {1-}, return >= -5 {0.0681-}> (U!Int,DJU)
  <ratio != 0 {0-}, ratio != 0 {1+}> (UInt,SUJ)
  <prio one of { 1, 2, 3 } {1+}, null> (U!Int,JM)
  <return one of { -4, 0 } {1+}, return one of { -5, -4, 0 } {1+}> (U!Int,DJJ)
  <::next_pid <= 42 {0.0023-}, ::next_pid <= 45 {0.0083-}> (U!Int,DUU)
  <prio <= 3 {1-}, prio <= 8 {0.008-}> (U!Int,DJU)
