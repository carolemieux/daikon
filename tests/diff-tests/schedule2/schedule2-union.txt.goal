<std.block()int:::ENTER, null>
  <::next_pid >= 0 {1+}, null> (UInt,JM)
<std.block()int:::EXIT, null>
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.enqueue(int;process *;)int:::ENTER, null>
  <::next_pid >= 1 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
<std.enqueue(int;process *;)int:::EXIT, null>
  <(return == 0)  ==>  (return is a pointer) {1+}, null> (NInt,JM)
  <(return == 0)  ==>  (prio >= 0) {1+}, null> (NInt,JM)
  <(return == -4)  ==>  (prio != 0) {0.9999+}, null> (NInt,JM)
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <::next_pid >= 1 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.finish()int:::EXIT, null>
  <(return == 0)  ==>  (return is a pointer) {1+}, null> (NInt,JM)
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
<std.flush()int:::EXIT, null>
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.get_command(int *;int *;float *;)int:::ENTER, null>
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <*command != 0 {1+}, null> (UInt,JM)
  <command != null {1+}, null> (UInt,JM)
  <prio != null {1+}, null> (UInt,JM)
  <ratio != null {1+}, null> (UInt,JM)
  <*ratio != 0 {1+}, null> (UInt,JM)
<std.get_command(int *;int *;float *;)int:::EXIT, null>
  <(return == 0)  ==>  (*ratio == orig(*ratio)) {1+}, null> (NInt,JM)
  <(return == 0)  ==>  (*command == orig(*command)) {1+}, null> (NInt,JM)
  <(return == 0)  ==>  (*prio == orig(*prio)) {1+}, null> (NInt,JM)
  <(return == 0)  ==>  (return is a pointer) {1+}, null> (NInt,JM)
  <(return == 1)  ==>  (*prio != 0) {1+}, null> (NInt,JM)
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <command == orig(command) {1+}, null> (Bin,JM)
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <ratio == orig(ratio) {1+}, null> (Bin,JM)
  <(orig(*command) == 0) ==> (*command == 0) {1+}, null> (Bin,JM)
  <(*prio == 0) ==> (orig(*prio) == 0) {1+}, null> (Bin,JM)
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <*command != 0 {1+}, null> (UInt,JM)
  <command != null {1+}, null> (UInt,JM)
  <prio != null {1+}, null> (UInt,JM)
  <ratio != null {1+}, null> (UInt,JM)
  <*ratio != 0 {1+}, null> (UInt,JM)
<std.get_current()process *:::ENTER, null>
  <::next_pid >= 0 {1+}, null> (UInt,JM)
<std.get_current()process *:::EXIT, null>
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <::next_pid >= 0 {1+}, null> (UInt,JM)
<std.get_process(int;float;process **;)int:::ENTER, null>
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
  <ratio >= 0.0 {1+}, null> (UInt,JM)
  <job != null {1+}, null> (UInt,JM)
<std.get_process(int;float;process **;)int:::EXIT, null>
  <ratio == orig(ratio) {1+}, null> (Bin,JM)
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <job == orig(job) {1+}, null> (Bin,JM)
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
  <ratio >= 0.0 {1+}, null> (UInt,JM)
  <job != null {1+}, null> (UInt,JM)
<std.new_job(int;)int:::ENTER, null>
  <::next_pid >= 0 {1+}, null> (UInt,JM)
<std.new_job(int;)int:::EXIT, null>
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <::next_pid >= orig(::next_pid) {1+}, null> (Bin,JM)
  <::next_pid - orig(::next_pid) - 1 == 0 {1+}, null> (Bin,JM)
  <(::next_pid == 0) ==> (orig(::next_pid) == 0) {1+}, null> (Bin,JM)
  <::next_pid >= 1 {1+}, null> (UInt,JM)
  <return == 0  (mod 4) {1+}, null> (UInt,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.put_end(int;process *;)int:::ENTER, null>
  <::next_pid >= 1 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
<std.put_end(int;process *;)int:::EXIT, null>
  <(return == 0)  ==>  (return is a pointer) {1+}, null> (NInt,JM)
  <(return == 0)  ==>  (prio >= 0) {1+}, null> (NInt,JM)
  <(return == -4)  ==>  (prio != 0) {0.9999+}, null> (NInt,JM)
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <::next_pid >= 1 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.quantum_expire()int:::EXIT, null>
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.reschedule(int;)int:::ENTER, null>
  <::next_pid >= 1 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
<std.reschedule(int;)int:::EXIT, null>
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <::next_pid >= 1 {1+}, null> (UInt,JM)
  <prio >= 0 {1+}, null> (UInt,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.schedule(int;int;float;)int:::ENTER, null>
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <command != 0 {1+}, null> (UInt,JM)
  <prio != 0 {1+}, null> (UInt,JM)
  <ratio != 0 {1+}, null> (UInt,JM)
<std.schedule(int;int;float;)int:::EXIT, null>
  <ratio == orig(ratio) {1+}, null> (Bin,JM)
  <command == orig(command) {1+}, null> (Bin,JM)
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <::next_pid >= orig(::next_pid) {1+}, null> (Bin,JM)
  <(::next_pid == 0) ==> (orig(::next_pid) == 0) {1+}, null> (Bin,JM)
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <return == 0  (mod 2) {1+}, null> (UInt,JM)
  <command != 0 {1+}, null> (UInt,JM)
  <prio != 0 {1+}, null> (UInt,JM)
  <ratio != 0 {1+}, null> (UInt,JM)
<std.unblock(float;)int:::ENTER, null>
  <ratio != 0 {1+}, null> (UInt,JM)
<std.unblock(float;)int:::EXIT, null>
  <ratio == orig(ratio) {1+}, null> (Bin,JM)
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <ratio != 0 {1+}, null> (UInt,JM)
  <return == 0 {1+}, null> (UInt,JM)
<std.upgrade_prio(int;float;)int:::ENTER, null>
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <ratio != 0 {1+}, null> (UInt,JM)
<std.upgrade_prio(int;float;)int:::EXIT, null>
  <ratio == orig(ratio) {1+}, null> (Bin,JM)
  <::next_pid == orig(::next_pid) {1+}, null> (Bin,JM)
  <prio == orig(prio) {1+}, null> (Bin,JM)
  <::next_pid >= 0 {1+}, null> (UInt,JM)
  <ratio != 0 {1+}, null> (UInt,JM)
